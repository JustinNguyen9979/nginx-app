apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-app
  namespace: nginx-app
spec:
  replicas: 2
  selector:
    matchLabels:
      run: nginx-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: nginx-app
    spec:
      containers:
      - name: nginx-app-container
        image: nginx:latest
        imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-app-ingress
  namespace: nginx-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: 172.16.0.16.nip.io
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx-app
            port: 
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-app
  namespace: nginx-app
  labels:
    run: nginx-app
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    run: nginx-app

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-app-pvc
  namespace: nginx-app
spec:
  storageClassName: longhorn
  resources:
    requests:
      storage: 100Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany